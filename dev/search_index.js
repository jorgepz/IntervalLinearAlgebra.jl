var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API","title":"API","text":"CurrentModule = IntervalLinearAlgebra","category":"page"},{"location":"api/#IntervalLinearAlgebra","page":"API","title":"IntervalLinearAlgebra","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Documentation for IntervalLinearAlgebra.","category":"page"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [IntervalLinearAlgebra]","category":"page"},{"location":"api/#IntervalLinearAlgebra.GaussSeidel","page":"API","title":"IntervalLinearAlgebra.GaussSeidel","text":"GaussSeidel(max_iterations, atol)\n\nReturns a Gauss-Seidel solver for the interval linear system Ax=b.\n\nPARAMETERS:\n\nmax_iterations: maximum number of iterations (default 20)\n\natol: absolute tolerance (default 0), if at some point |xₖ - xₖ₊₁| < atol (elementwise), then stop and return xₖ₊₁.     If atol=0, then min(diam(A))*1e-5 is used.\n\n\n\n\n\n","category":"type"},{"location":"api/#IntervalLinearAlgebra.HansenBliekRohn","page":"API","title":"IntervalLinearAlgebra.HansenBliekRohn","text":"HansenBliekRohn()\n\nReturns a Hansen-Bliek-Rohn solver for the interval linear system Ax=b.\n\n\n\n\n\n","category":"type"},{"location":"api/#IntervalLinearAlgebra.Jacobi","page":"API","title":"IntervalLinearAlgebra.Jacobi","text":"Jacobi(max_iterations, atol)\n\nReturns a Jacobi solver for the interval linear system Ax=b.\n\nPARAMETERS:\n\nmax_iterations: maximum number of iterations (default 20)\n\natol: absolute tolerance (default 0), if at some point |xₖ - xₖ₊₁| < atol (elementwise), then stop and return xₖ₊₁.     If atol=0, then min(diam(A))*1e-5 is used.\n\n\n\n\n\n","category":"type"},{"location":"api/#IntervalLinearAlgebra.Krawczyk","page":"API","title":"IntervalLinearAlgebra.Krawczyk","text":"Krawczyk(max_iterations, atol)\n\nReturns a Krawczyk solver for the interval linear system Ax=b.\n\nPARAMETERS:\n\nmax_iterations: maximum number of iterations (default 20)\n\natol: absolute tolerance (default 0), if at some point |xₖ - xₖ₊₁| < atol (elementwise), then stop and return xₖ₊₁.     If atol=0, then min(diam(A))*1e-5 is used.\n\n\n\n\n\n","category":"type"},{"location":"api/#IntervalLinearAlgebra.comparison_matrix-Tuple{StaticArrays.SMatrix{S1, S2, T, L} where {S1, S2, T, L}}","page":"API","title":"IntervalLinearAlgebra.comparison_matrix","text":"comparison_matrix(A::Matrix{Interval})\n\nComputes the comparison matrix ⟨A⟩ of the given matrix A according to the definition ⟨A⟩ii = mig(Aii) ⟨A⟩ij = -mag(Aij)\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.enclose-Union{Tuple{T}, Tuple{N}, Tuple{StaticArrays.StaticMatrix{N, N, T}, StaticArrays.StaticVector{N, T}}} where {N, T}","page":"API","title":"IntervalLinearAlgebra.enclose","text":"enclose(A::Matrix{Interval}, b::Vector{Interval})\n\nComputes an initial enclosure Σ so that x ⊆ Σ, where x is the solution of the interval system Ax = b.\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.interval_norm-Tuple{AbstractMatrix{T} where T}","page":"API","title":"IntervalLinearAlgebra.interval_norm","text":"interval_norm(A::Matrix{Interval})\n\ncomputes the infinity norm of interval matrix A.\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.is_H_matrix-Tuple{Any}","page":"API","title":"IntervalLinearAlgebra.is_H_matrix","text":"is_H_matrix(A)\n\nTests whether an interval matrix A is an H-matrix, by testing that ⟨A⟩⁻¹e>0, where e=[1, 1, …, 1]ᵀ. Note that in practice it tests that an approximation of  ⟨A⟩⁻¹e satisfies the condition. For more details see section 4.4 of [1]\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.is_M_matrix-Tuple{Any}","page":"API","title":"IntervalLinearAlgebra.is_M_matrix","text":"is_M_matrix(A)\n\nChecks whether the interval matrix A is an M-matrix, that is a Z-matrix with non-negative inverse. For more details see section 4.2 of [1]\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.is_Z_matrix-Tuple{Any}","page":"API","title":"IntervalLinearAlgebra.is_Z_matrix","text":"is_Z_matrix(A)\n\nChecks whether the interval matrix A is a Z-matrix, that is whether Aᵢⱼ≤0 for all i≠j. For more details see section 4.2 of [1]\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.is_strictly_diagonally_dominant-Tuple{Any}","page":"API","title":"IntervalLinearAlgebra.is_strictly_diagonally_dominant","text":"is_strictly_diagonally_dominant(A)\n\nChecks whether an interval matrix A is stictly diagonally dominant, that is if mig(Aᵢᵢ) > ∑_(k ≠ i) mag(Aᵢₖ) for i=1,…,n. For more details see section 4.5 of [1]\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.is_strongly_regular-Tuple{Any}","page":"API","title":"IntervalLinearAlgebra.is_strongly_regular","text":"is_strongly_regular(A)\n\nTests whether an interval matrix A is strongly regular. An interval matrix A is strongly regular if Ac⁻¹A is regular. For more details see section 4.6 of [1]\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.precondition-Tuple{Any, Any}","page":"API","title":"IntervalLinearAlgebra.precondition","text":"Preconditions the interval system Ax = b by multipling by the (approximate) inverse of Ac, that is the midpoint of A.\n\n\n\n\n\n","category":"method"},{"location":"wip/","page":"Tutorials","title":"Tutorials","text":"still work in progress, stay tuned!","category":"page"},{"location":"#IntervalLinearAlgebra.jl","page":"Home","title":"IntervalLinearAlgebra.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Linear algebra done rigorously","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for IntervalLinearAlgebra.jl, a package contains functionalities to solve numerical linear algebra tasks using interval arithmetic.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"!!! note The package is still under active development and everything can change overnight.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Different algorithms to compute the hull of interval linear systems\nclassify interval matrices\nrigorous solution of real linear systems\nexact characterization of the solution of interval linear systems using Oettli-Präger","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package is not registered yet, it can be installed as","category":"page"},{"location":"","page":"Home","title":"Home","text":"(@v1.6) pkg> add https://github.com/lucaferranti/intervallinearalgebra.jl","category":"page"}]
}
