var documenterSearchIndex = {"docs":
[{"location":"references/#all_ref","page":"References","title":"References","text":"","category":"section"},{"location":"references/#[HOR19]","page":"References","title":"[HOR19]","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"<ul><li>","category":"page"},{"location":"references/","page":"References","title":"References","text":"J. Horácek, Interval Linear and Nonlinear Systems, PhD dissertation, 2019","category":"page"},{"location":"references/","page":"References","title":"References","text":"<li style=\"list-style: none\"><details>\n<summary>bibtex</summary>","category":"page"},{"location":"references/","page":"References","title":"References","text":"@article{horavcek2019interval,\n  title={Interval linear and nonlinear systems},\n  author={Hor{\\'a}{\\v{c}}ek, Jaroslav},\n  year={2019},\n  publisher={Univerzita Karlova, Matematicko-fyzik{\\'a}ln{\\'\\i} fakulta}\n}","category":"page"},{"location":"references/","page":"References","title":"References","text":"</details></li></ul>","category":"page"},{"location":"references/","page":"References","title":"References","text":"","category":"page"},{"location":"references/#[JAU14]","page":"References","title":"[JAU14]","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"<ul><li>","category":"page"},{"location":"references/","page":"References","title":"References","text":"L. Jaulin and B. Desrochers, Introduction to the algebra of separators with application to path planning, Engineering Applications of Artificial Intelligence 33 (2014): 141-147","category":"page"},{"location":"references/","page":"References","title":"References","text":"<li style=\"list-style: none\"><details>\n<summary>bibtex</summary>","category":"page"},{"location":"references/","page":"References","title":"References","text":"@article{jaulin2014introduction,\n  title={Introduction to the algebra of separators with application to path planning},\n  author={Jaulin, Luc and Desrochers, Beno{\\^\\i}t},\n  journal={Engineering Applications of Artificial Intelligence},\n  volume={33},\n  pages={141--147},\n  year={2014},\n  publisher={Elsevier}\n}","category":"page"},{"location":"references/","page":"References","title":"References","text":"</details></li></ul>","category":"page"},{"location":"references/","page":"References","title":"References","text":"","category":"page"},{"location":"references/#[NEU99]","page":"References","title":"[NEU99]","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"<ul><li>","category":"page"},{"location":"references/","page":"References","title":"References","text":"A. Neumaier, Interval methods for systems of equations, Cambridge university press, 1990 ","category":"page"},{"location":"references/","page":"References","title":"References","text":"<li style=\"list-style: none\"><details>\n<summary>bibtex</summary>","category":"page"},{"location":"references/","page":"References","title":"References","text":"@book{neumaier1990interval,\n  title={Interval methods for systems of equations},\n  author={Neumaier, Arnold and Neumaier, Arnold},\n  number={37},\n  year={1990},\n  publisher={Cambridge university press}\n}","category":"page"},{"location":"references/","page":"References","title":"References","text":"</details></li></ul>","category":"page"},{"location":"references/","page":"References","title":"References","text":"","category":"page"},{"location":"references/#[OET64]","page":"References","title":"[OET64]","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"<ul><li>","category":"page"},{"location":"references/","page":"References","title":"References","text":"W. Oettli and W. Prager, Compatibility of approximate solution of linear equa- tions with given error bounds for coefficients and right-hand sides, Numerische Mathematik, 6(1):405–409, 1964.","category":"page"},{"location":"references/","page":"References","title":"References","text":"<li style=\"list-style: none\"><details>\n<summary>bibtex</summary>","category":"page"},{"location":"references/","page":"References","title":"References","text":"@article{oettli1964compatibility,\n  title={Compatibility of approximate solution of linear equations with given error bounds for coefficients and right-hand sides},\n  author={Oettli, Werner and Prager, William},\n  journal={Numerische Mathematik},\n  volume={6},\n  number={1},\n  pages={405--409},\n  year={1964},\n  publisher={Springer}\n}","category":"page"},{"location":"references/","page":"References","title":"References","text":"</details></li></ul>","category":"page"},{"location":"references/","page":"References","title":"References","text":"","category":"page"},{"location":"references/#[ROH06]","page":"References","title":"[ROH06]","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"<ul><li>","category":"page"},{"location":"references/","page":"References","title":"References","text":"J. Rohn. Solvability of systems of interval linear equations and inequalities, Linear optimization problems with inexact data, pages 35–77. Springer, 2006","category":"page"},{"location":"references/","page":"References","title":"References","text":"<li style=\"list-style: none\"><details>\n<summary>bibtex</summary>","category":"page"},{"location":"references/","page":"References","title":"References","text":"@incollection{rohn2006solvability,\n  title={Solvability of systems of interval linear equations and inequalities},\n  author={Rohn, Jir{\\i}},\n  booktitle={Linear optimization problems with inexact data},\n  pages={35--77},\n  year={2006},\n  publisher={Springer}\n}","category":"page"},{"location":"references/","page":"References","title":"References","text":"</details></li></ul>","category":"page"},{"location":"references/","page":"References","title":"References","text":"","category":"page"},{"location":"references/#[RUM10]","page":"References","title":"[RUM10]","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"<ul><li>","category":"page"},{"location":"references/","page":"References","title":"References","text":"S.M. Rump, Verification methods: Rigorous results using floating-point arithmetic, Acta Numerica, 19:287–449, 2010","category":"page"},{"location":"references/","page":"References","title":"References","text":"<li style=\"list-style: none\"><details>\n<summary>bibtex</summary>","category":"page"},{"location":"references/","page":"References","title":"References","text":"@article{rump2010verification,\n  title={Verification methods: Rigorous results using floating-point arithmetic},\n  author={Rump, Siegfried M},\n  journal={Acta Numerica},\n  volume={19},\n  pages={287--449},\n  year={2010},\n  publisher={Cambridge University Press}\n}","category":"page"},{"location":"references/","page":"References","title":"References","text":"</details></li></ul>","category":"page"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = IntervalLinearAlgebra","category":"page"},{"location":"api/#IntervalLinearAlgebra","page":"API","title":"IntervalLinearAlgebra","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Documentation for IntervalLinearAlgebra.","category":"page"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [IntervalLinearAlgebra]","category":"page"},{"location":"api/#IntervalLinearAlgebra.GaussElimination","page":"API","title":"IntervalLinearAlgebra.GaussElimination","text":"GaussElimination <: LinearSolver\n\nReturns a Gaussian elimination solver for the interval linear system Ax=b.\n\n\n\n\n\n","category":"type"},{"location":"api/#IntervalLinearAlgebra.GaussSeidel","page":"API","title":"IntervalLinearAlgebra.GaussSeidel","text":"GaussSeidel(max_iterations, atol)\n\nReturns a Gauss-Seidel solver for the interval linear system Ax=b.\n\nPARAMETERS:\n\nmax_iterations: maximum number of iterations (default 20)\n\natol: absolute tolerance (default 0), if at some point |xₖ - xₖ₊₁| < atol (elementwise), then stop and return xₖ₊₁.     If atol=0, then min(diam(A))*1e-5 is used.\n\n\n\n\n\n","category":"type"},{"location":"api/#IntervalLinearAlgebra.HansenBliekRohn","page":"API","title":"IntervalLinearAlgebra.HansenBliekRohn","text":"HansenBliekRohn()\n\nReturns a Hansen-Bliek-Rohn solver for the interval linear system Ax=b.\n\n\n\n\n\n","category":"type"},{"location":"api/#IntervalLinearAlgebra.InverseDiagonalMidpoint","page":"API","title":"IntervalLinearAlgebra.InverseDiagonalMidpoint","text":"InverseDiagonalMidpoint <: Precondition\n\nPreconditioner that preconditions the linear system Ax=b with inv(Diagonal(Ac)), where Ac is the midpoint matrix of A.\n\nExample\n\nidmp = InverseDiagonalMidpoint() # instantiate preconditioner\nAprec, bprec = idmp(A, b) # apply preconditioner\n\n\n\n\n\n","category":"type"},{"location":"api/#IntervalLinearAlgebra.InverseMidpoint","page":"API","title":"IntervalLinearAlgebra.InverseMidpoint","text":"InverseMidpoint <: Precondition\n\nPreconditioner that preconditions the linear system Ax=b with inv(Ac), where Ac is the midpoint matrix of A.\n\nExample\n\nimp = InverseMidpoint() # instantiate preconditioner\nAprec, bprec = imp(A, b) # apply preconditioner\n\n\n\n\n\n","category":"type"},{"location":"api/#IntervalLinearAlgebra.Jacobi","page":"API","title":"IntervalLinearAlgebra.Jacobi","text":"Jacobi(max_iterations, atol)\n\nReturns a Jacobi solver for the interval linear system Ax=b.\n\nPARAMETERS:\n\nmax_iterations: maximum number of iterations (default 20)\n\natol: absolute tolerance (default 0), if at some point |xₖ - xₖ₊₁| < atol (elementwise), then stop and return xₖ₊₁.     If atol=0, then min(diam(A))*1e-5 is used.\n\n\n\n\n\n","category":"type"},{"location":"api/#IntervalLinearAlgebra.Krawczyk","page":"API","title":"IntervalLinearAlgebra.Krawczyk","text":"Krawczyk(max_iterations, atol)\n\nReturns a Krawczyk solver for the interval linear system Ax=b.\n\nPARAMETERS:\n\nmax_iterations: maximum number of iterations (default 20)\n\natol: absolute tolerance (default 0), if at some point |xₖ - xₖ₊₁| < atol (elementwise), then stop and return xₖ₊₁.     If atol=0, then min(diam(A))*1e-5 is used.\n\n\n\n\n\n","category":"type"},{"location":"api/#IntervalLinearAlgebra.NoPrecondition","page":"API","title":"IntervalLinearAlgebra.NoPrecondition","text":"NoPrecondition <: Precondition\n\nTrivial preconditioner which does nothing.\n\nExample\n\nnp = NoPrecondition() # instantiate preconditioner\nAprec, bprec = np(A, b) # apply preconditioner\n\n\n\n\n\n","category":"type"},{"location":"api/#IntervalLinearAlgebra.OettliPrager","page":"API","title":"IntervalLinearAlgebra.OettliPrager","text":"OettliPrager <: LinearSolver\n\nType for the OettliPrager solver of the interval linear system Ax=b. The solver first converts the system of interval equalities into a system of real inequalities using Oettli-Präger theorem [OET64] and then finds the feasible set using the forward-backward contractor method [JAU14] implemented in IntervalConstraintProgramming.jl.\n\nFields\n\ntol – tolerance for the paving, default 0.01.\n\nNotes\n\nYou need to import IntervalConstraintProgramming.jl to use this functionality.\nAn object of type OettliPrager is a function with methods\n  (op::OettliPrager)(A::AbstractMatrix{T},\n                  b::AbstractVector{T},\n                  [X]::AbstractVector{T}=enclose(A, b)) where {T<:Interval}\n\n  (op::OettliPrager)(A::AbstractMatrix{T},\n                  b::AbstractVector{T},\n                  X::IntervalBox) where {T<:Interval}\nInput\nA   – N×N interval matrix\nb   – interval vector of length N\nX   – (optional) initial enclosure for the solution of Ax = b. If not given,           it is automatically computed using enclose\n\nExamples\n\njulia> A = [2..4 -2..1; -1..2 2..4]\n2×2 Matrix{Interval{Float64}}:\n  [2, 4]  [-2, 1]\n [-1, 2]   [2, 4]\n\njulia> b = [-2..2, -2..2]\n2-element Vector{Interval{Float64}}:\n [-2, 2]\n [-2, 2]\n\njulia> op = OettliPrager(0.1)\nOettliPrager linear solver\ntol = 0.1\n\njulia> op(A, b)\nPaving:\n- tolerance ϵ = 0.1\n- inner approx. of length 1188\n- boundary approx. of length 821\n\n\n\n\n\n","category":"type"},{"location":"api/#IntervalLinearAlgebra.comparison_matrix-Tuple{StaticArrays.SMatrix{S1, S2, T, L} where {S1, S2, T, L}}","page":"API","title":"IntervalLinearAlgebra.comparison_matrix","text":"comparison_matrix(A::Matrix{Interval})\n\nComputes the comparison matrix ⟨A⟩ of the given matrix A according to the definition ⟨A⟩ii = mig(Aii) ⟨A⟩ij = -mag(Aij)\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.enclose-Union{Tuple{T}, Tuple{N}, Tuple{StaticArrays.StaticMatrix{N, N, T}, StaticArrays.StaticVector{N, T}}} where {N, T}","page":"API","title":"IntervalLinearAlgebra.enclose","text":"enclose(A::Matrix{Interval}, b::Vector{Interval})\n\nComputes an initial enclosure Σ so that x ⊆ Σ, where x is the solution of the interval system Ax = b.\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.interval_norm-Tuple{AbstractMatrix{T} where T}","page":"API","title":"IntervalLinearAlgebra.interval_norm","text":"interval_norm(A::Matrix{Interval})\n\ncomputes the infinity norm of interval matrix A.\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.is_H_matrix-Tuple{Any}","page":"API","title":"IntervalLinearAlgebra.is_H_matrix","text":"is_H_matrix(A)\n\nTests whether an interval matrix A is an H-matrix, by testing that ⟨A⟩⁻¹e>0, where e=[1, 1, …, 1]ᵀ. Note that in practice it tests that an approximation of ⟨A⟩⁻¹e satisfies the condition. For more details see section 4.4 of [HOR19]\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.is_M_matrix-Tuple{Any}","page":"API","title":"IntervalLinearAlgebra.is_M_matrix","text":"is_M_matrix(A)\n\nChecks whether the interval matrix A is an M-matrix, that is a Z-matrix with non-negative inverse. For more details see section 4.2 of [HOR19]\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.is_Z_matrix-Tuple{Any}","page":"API","title":"IntervalLinearAlgebra.is_Z_matrix","text":"is_Z_matrix(A)\n\nChecks whether the interval matrix A is a Z-matrix, that is whether Aᵢⱼ≤0 for all i≠j. For more details see section 4.2 of [HOR19]\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.is_strictly_diagonally_dominant-Tuple{Any}","page":"API","title":"IntervalLinearAlgebra.is_strictly_diagonally_dominant","text":"is_strictly_diagonally_dominant(A)\n\nChecks whether an interval matrix A is stictly diagonally dominant, that is if mig(Aᵢᵢ) > ∑_(k ≠ i) mag(Aᵢₖ) for i=1,…,n. For more details see section 4.5 of [HOR19]\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.is_strongly_regular-Tuple{Any}","page":"API","title":"IntervalLinearAlgebra.is_strongly_regular","text":"is_strongly_regular(A)\n\nTests whether an interval matrix A is strongly regular. An interval matrix A is strongly regular if Ac⁻¹A is regular. For more details see section 4.6 of [HOR19]\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.oettli_eq-Tuple{Any, Any, Any}","page":"API","title":"IntervalLinearAlgebra.oettli_eq","text":"Returns the separator for the constraint |a_c ⋅x - b_c| - a_r ⋅|x| - b_r <= 0.\n\na and x must be vectors of the same length and b is scalar.\n\nThe absolue values in the equation are taken elementwise.\n\na_c and a_r are vectors containing midpoints and radii of the intervals in a. Similar b_c and b_r.\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.oettli_lhs-Tuple{Any, Any, Any}","page":"API","title":"IntervalLinearAlgebra.oettli_lhs","text":"returns the unrolled expression for a x - b a and x must be vectors of the same length and b is scalar. The absolue value in the equation is taken elementwise.\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.oettli_rhs-Tuple{Any, Any, Any}","page":"API","title":"IntervalLinearAlgebra.oettli_rhs","text":"returns the unrolled expression for a x + b a and x must be vectors of the same length and b is scalar. The absolue value in the equation is taken elementwise.\n\n\n\n\n\n","category":"method"},{"location":"api/#IntervalLinearAlgebra.rref-Tuple{Any}","page":"API","title":"IntervalLinearAlgebra.rref","text":"rref(A)\n\ncomputes the reduced row echelon form of the interval matrix A using maximum mignitude as pivoting strategy.\n\nParameters:\n\nA : interval matrix\n\n\n\n\n\n","category":"method"},{"location":"wip/","page":"Tutorials","title":"Tutorials","text":"still work in progress, stay tuned!","category":"page"},{"location":"#IntervalLinearAlgebra.jl","page":"Home","title":"IntervalLinearAlgebra.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Linear algebra done rigorously","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for IntervalLinearAlgebra.jl, a package contains functionalities to solve numerical linear algebra tasks using interval arithmetic.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"!!! note The package is still under active development and everything can change overnight.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Different algorithms to compute the hull of interval linear systems\nclassify interval matrices\nrigorous solution of real linear systems\nexact characterization of the solution of interval linear systems using Oettli-Präger","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package is not registered yet, it can be installed as","category":"page"},{"location":"","page":"Home","title":"Home","text":"(@v1.6) pkg> add https://github.com/lucaferranti/intervallinearalgebra.jl","category":"page"}]
}
